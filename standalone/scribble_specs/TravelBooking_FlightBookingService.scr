module src.com.simonjf.ScribbleExamples.TravelBooking.TravelBooking_FlightBookingService;

type <erlang> "atom" from "" as RequestInfo;
type <erlang> "list" from "" as FlightDetails;
type <erlang> "list" from "" as HotelDetails;
type <erlang> "int" from "" as BookingID;
type <erlang> "int" from "" as CCNumber;
type <erlang> "string" from "" as Name;
type <erlang> "string" from "" as ExpiryDate;
type <erlang> "string" from "" as CheckInDate;
type <erlang> "string" from "" as CheckOutDate;
type <erlang> "int" from "" as CVC;
type <erlang> "int" from "" as OutwardFlight;
type <erlang> "int" from "" as ReturnFlight;
type <erlang> "list" from "" as OutwardFlights;
type <erlang> "list" from "" as ReturnFlights;
type <erlang> "string" from "" as HotelName;
type <erlang> "float" from "" as Money;

local protocol BookTravel at FlightBookingService(role TravelAgent,role Customer,role FlightBookingService,role HotelBookingService,role PaymentProcessor) {
	rec bookingLoop {
		par {
			flightInfoRequest(RequestInfo) from TravelAgent;
			flightInfoResponse(OutwardFlights,ReturnFlights) to TravelAgent;
		} and {
		}
		choice at Customer {
			par {
				bookFlight(Name,OutwardFlight,ReturnFlight) from TravelAgent;
				flightBookingConfirmation() to TravelAgent;
			} and {
			}
		} or {
			cancelBooking() from Customer;
			continue bookingLoop;
		}
	}
}
