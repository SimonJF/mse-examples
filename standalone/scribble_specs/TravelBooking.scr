module src.com.simonjf.ScribbleExamples.TravelBooking.TravelBooking;

type <erlang> "atom" from "" as RequestInfo;
type <erlang> "atom" from "" as FlightDetails;
type <erlang> "atom" from "" as HotelDetails;
type <erlang> "int" from "" as BookingID;
type <erlang> "int" from "" as CCNumber;
type <erlang> "string" from "" as ExpiryDate;
type <erlang> "int" from "" as CVC;
type <erlang> "int" from "" as FlightID;
type <erlang> "int" from "" as HotelID;
type <erlang> "float" from "" as Money;

global protocol BookTravel(role TravelAgent, role Customer,
	role FlightBookingService, role HotelBookingService, role PaymentProcessor) {

		rec bookingLoop {

			// 1) Receive customer request
			customerRequest(RequestInfo) from Customer to TravelAgent;

			// 2) In parallel, search for flights and hotels
	    	par {
	    		flightInfoRequest(RequestInfo) from TravelAgent to FlightBookingService;
	    		flightInfoResponse(FlightDetails) from FlightBookingService to TravelAgent;
	    	} and {
	    		hotelInfoRequest(RequestInfo) from TravelAgent to HotelBookingService;
	    		hotelInfoResponse(HotelDetails) from HotelBookingService to TravelAgent;
			}

	   	  	// Send details to customer
	  	  	customerResponse(FlightDetails, HotelDetails) from TravelAgent to Customer;

	    	// Customer can choose to proceed, or cancel the booking and start again.
	    	choice at Customer {
	    		proceedWithBooking(FlightInfo, HotelInfo) from Customer to TravelAgent;
	    	} or {
	    		cancelBooking() from Customer to TravelAgent;
	    		continue bookingLoop;
	    	}

	    }

	    // At this point, the customer has asked for the booking.
	    ccInfoRequest() from Customer to TravelAgent;
	    ccInfoResponse(CCNumber, ExpiryDate, CVC) from Customer to TravelAgent;

	    par {
	    	bookFlight(FlightID) from TravelAgent to FlightBookingService;
	    	flightBookingConfirmation() from FlightBookingService to TravelAgent;
	    } and {
	    	bookHotel(HotelID) from TravelAgent to HotelBookingService;
	    	hotelBookingConfirmation() from HotelBookingService to TravelAgent;
	    }

	    processPayment(CCNumber, ExpiryDate, CVC, Money) from TravelAgent to PaymentProcessor;
	    paymentConfirmation() from PaymentProcessor to TravelAgent;
	    confirmation() from TravelAgent to Customer;
}
