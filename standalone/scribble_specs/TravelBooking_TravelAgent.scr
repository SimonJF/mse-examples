module src.com.simonjf.ScribbleExamples.TravelBooking.TravelBooking_TravelAgent;

type <erlang> "atom" from "" as RequestInfo;
type <erlang> "list" from "" as FlightDetails;
type <erlang> "list" from "" as HotelDetails;
type <erlang> "int" from "" as BookingID;
type <erlang> "int" from "" as CCNumber;
type <erlang> "string" from "" as Name;
type <erlang> "string" from "" as ExpiryDate;
type <erlang> "string" from "" as CheckInDate;
type <erlang> "string" from "" as CheckOutDate;
type <erlang> "int" from "" as CVC;
type <erlang> "int" from "" as OutwardFlight;
type <erlang> "int" from "" as ReturnFlight;
type <erlang> "list" from "" as OutwardFlights;
type <erlang> "list" from "" as ReturnFlights;
type <erlang> "string" from "" as HotelName;
type <erlang> "float" from "" as Money;

local protocol BookTravel at TravelAgent(role TravelAgent,role Customer,role FlightBookingService,role HotelBookingService,role PaymentProcessor) {
	rec bookingLoop {
		customerRequest(RequestInfo) from Customer;
		par {
			flightInfoRequest(RequestInfo) to FlightBookingService;
			flightInfoResponse(OutwardFlights,ReturnFlights) from FlightBookingService;
		} and {
			hotelInfoRequest(RequestInfo) to HotelBookingService;
			hotelInfoResponse(HotelDetails) from HotelBookingService;
		}
		customerResponse(OutwardFlights,ReturnFlights,HotelDetails) to Customer;
		choice at Customer {
			proceedWithBooking(OutwardFlight,ReturnFlight,HotelName) from Customer;
			ccInfoRequest() to Customer;
			ccInfoResponse(CCNumber,ExpiryDate,CVC) from Customer;
			par {
				bookFlight(Name,OutwardFlight,ReturnFlight) to FlightBookingService;
				flightBookingConfirmation() from FlightBookingService;
			} and {
				bookHotel(Name,HotelName,CheckInDate,CheckOutDate) to HotelBookingService;
				hotelBookingConfirmation() from HotelBookingService;
			}
			processPayment(CCNumber,ExpiryDate,CVC,Money) to PaymentProcessor;
			paymentConfirmation() from PaymentProcessor;
			confirmation() to Customer;
		} or {
			cancelBooking() from Customer;
			continue bookingLoop;
		}
	}
}
